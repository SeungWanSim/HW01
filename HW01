/*
- 사용자로부터 5개의 숫자를 입력 받습니다.
- 입력 받은 숫자를 배열에 저장합니다.
- 배열에 저장된 숫자들의 합계와 평균을 계산합니다.
- 계산된 합계와 평균을 출력합니다.
- 배열을 인자로 넘겨 받아서 배열 원소들의 합계를 반환하는 함수를 구현해봅니다.
- 배열을 인자로 넘겨 받아서 배열 원소들의 평균을 반환하는 함수를 구현해봅니다.
- 위에서 만든 합계 함수와 평균 함수를 호출하여 합계와 평균을 출력합니다.
도전과제
- 정렬은 오름차순 정렬과 내림차순 정렬이 가능해야 합니다.
- 숫자 1을 입력 받으면 오름차순 정렬, 숫자 2를 입력 받으면 내림차순 정렬을 하도록 구현해주세요.
- `algorithm` 헤더의 `sort` 함수를 사용하지 않고 직접 구현해보세요.
- 오름차순 정렬과 내림차순 정렬 동작을 각각 함수로 구현해보세요.*/
#include<iostream>
using namespace std;

void printArray(int numbers[],int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << numbers[i] << " ";
	}
}
int getSum(int numbers[], int size)
{
	int sum = 0;
	for (int i = 0; i < size; i++)
	{
		sum += numbers[i];
		
	}
	return sum;
}

int getAvg(int numbers[], int size)
{
	int avg = 0;
	avg = getSum(numbers, size) / size;
	return avg;
}
void sortAsc(int numbers[], int size)
{
	for (int i = 0; i < size; i++)
	{
		for (int j = 0; j < size - i - 1; j++)
		{
			if (numbers[j] > numbers[j + 1])
			{
				int temp = numbers[j];
				numbers[j] = numbers[j + 1];
				numbers[j + 1] = temp;
			}
		}
	}
}
void sorta(int numbers[], int size)
{
	for (int i = 0; i < size; i++)
	{
		for (int j = 0; j < size - i - 1; j++)
		{
			if (numbers[j] < numbers[j + 1])
			{
				int temp = numbers[j];
				numbers[j] = numbers[j + 1];
				numbers[j + 1] = temp;
			}
		}
	}
}
int main()
{
	int numbers[5];
	const int size = 5;
	int shortChoice;

	for (int i = 0; i < size; i++)
	{
		cout << i + 1 << "번쨰 숫자 입력";
		cin >> numbers[i];
	}
	printArray(numbers, size);
	cout << "총합:" << getSum(numbers, size);
	cout << "평균:" << getAvg(numbers, size);

	cout << "1번=오름차순,2번=내림차순:";
	cin >> shortChoice;

	if (shortChoice == 1)
	{
		sortAsc(numbers, size);
	}
	else if (shortChoice == 2)
	{
		sorta(numbers, size);
	}
	else
	{
		cout << "1,2중에 택하시오" << endl;
	}
	

	printArray(numbers, size);
	return 0;
}